#!/bin/bash

########################################
# Config, etc
########################################

# Quit if any command fails or if a variable is unbound
set -e -o nounset

# If launched through a symlink, check for an env.sh file in that directory.
# If that does not exist, use the one in the script's actual location.
SCRIPT_DIR="$( dirname "${BASH_SOURCE[0]}" )"
[ -r "${SCRIPT_DIR}/env.sh" ] || SCRIPT_DIR="$( dirname "$(readlink -e "${BASH_SOURCE[0]}")" )"
source "${SCRIPT_DIR}/env.sh"

function print_usage () {
	SCRIPT_NAME="$( basename "${BASH_SOURCE[0]}" )"
        echo "
Usage:
	$SCRIPT_NAME

	Installs a public key on the management node and installs the management
	node's public key on this computer.

	Assumes your public key is '~/.ssh/id_rsa.pub'.
"
	exit ${1:-0}
}

########################################
# Script
########################################
[[ $# -ne 0 && ($1 == "-h" || $1 == "--help") ]] && print_usage
[[ $# -ne 0 ]] && print_usage 1

echo "registering user's public key with STARS"

scp $HOME/.ssh/id_rsa.pub $RHOST:~/temp.pk
ssh $RHOST 'cat temp.pk >> ~/.ssh/authorized_keys; rm temp.pk'
echo "regisering clts's public key with user"
scp $RHOST:~/.ssh/id_rsa.pub $HOME/temp.pk
cat $HOME/temp.pk >> $HOME/.ssh/authorized_keys 
rm $HOME/temp.pk
