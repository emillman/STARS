#!/bin/bash
#
# Start the specified workfiles

########################################
# Config, etc
########################################

# Quit if any command fails or if a variable is unbound
set -e -o nounset

# If launched through a symlink, check for an env.sh file in that directory.
# If that does not exist, use the one in the script's actual location.
SCRIPT_DIR="$( dirname "${BASH_SOURCE[0]}" )"
[ -r "${SCRIPT_DIR}/env.sh" ] || SCRIPT_DIR="$( dirname "$(readlink -e "${BASH_SOURCE[0]}")" )"
source "${SCRIPT_DIR}/env.sh"

function die () {
	[ -n "$1" ] && echo "$1" >&2
	exit 1
}

function print_usage () {
	SCRIPT_NAME="$( basename "${BASH_SOURCE[0]}" )"
        echo "
Usage:
	$SCRIPT_NAME <WORKFILE1> [WORKFILE2 [...]]

	Start the specified workfiles.
"
	exit ${1:-0}
}

########################################
# Script
########################################
[[ $# -eq 0 ]] && print_usage 1
[[ $1 == "-h" || $1 == "--help" ]] && print_usage

for file in "$@"; do
	echo "Processing workfile: $file"
	WORKFILE="$( basename "$file" )"

	if [ -n "$RHOST" ]; then
		scp "$file" "$RHOST:$DPATH/work/$WORKFILE.tmp" || die "Unable to send workfile to managment node"
		ssh "$RHOST" "mv '$DPATH/work/$WORKFILE.tmp $DPATH/work/$WORKFILE'" || die "Failed to submit workfile"
	else
		stat "$file" || die "Unable to send workfile to managment node"
		cp "$file" "$DPATH/work/" || die "Failed to submit workfile"
	fi

	echo "Submitted $WORKFILE successfully"
done

